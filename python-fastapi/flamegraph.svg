<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="938" onload="init(evt)" viewBox="0 0 1200 938" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="938" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o flamegraph.svg -- uvicorn app.main:app --log-level critical</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="927.00"> </text><svg id="frames" x="10" width="1180" total_samples="20152"><g><title>data_received (uvicorn/protocols/http/httptools_impl.py:186) (56 samples, 0.28%)</title><rect x="7.4980%" y="212" width="0.2779%" height="15" fill="rgb(227,0,7)" fg:x="1511" fg:w="56"/><text x="7.7480%" y="222.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:844) (28 samples, 0.14%)</title><rect x="8.8775%" y="388" width="0.1389%" height="15" fill="rgb(217,0,24)" fg:x="1789" fg:w="28"/><text x="9.1275%" y="398.50"></text></g><g><title>get (anyio/lowlevel.py:139) (25 samples, 0.12%)</title><rect x="8.8924%" y="404" width="0.1241%" height="15" fill="rgb(221,193,54)" fg:x="1792" fg:w="25"/><text x="9.1424%" y="414.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:845) (21 samples, 0.10%)</title><rect x="9.0165%" y="388" width="0.1042%" height="15" fill="rgb(248,212,6)" fg:x="1817" fg:w="21"/><text x="9.2665%" y="398.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (38 samples, 0.19%)</title><rect x="9.2795%" y="452" width="0.1886%" height="15" fill="rgb(208,68,35)" fg:x="1870" fg:w="38"/><text x="9.5295%" y="462.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (47 samples, 0.23%)</title><rect x="9.2646%" y="436" width="0.2332%" height="15" fill="rgb(232,128,0)" fg:x="1867" fg:w="47"/><text x="9.5146%" y="446.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (73 samples, 0.36%)</title><rect x="9.1455%" y="404" width="0.3622%" height="15" fill="rgb(207,160,47)" fg:x="1843" fg:w="73"/><text x="9.3955%" y="414.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (70 samples, 0.35%)</title><rect x="9.1604%" y="420" width="0.3474%" height="15" fill="rgb(228,23,34)" fg:x="1846" fg:w="70"/><text x="9.4104%" y="430.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (84 samples, 0.42%)</title><rect x="9.1207%" y="388" width="0.4168%" height="15" fill="rgb(218,30,26)" fg:x="1838" fg:w="84"/><text x="9.3707%" y="398.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (37 samples, 0.18%)</title><rect x="9.5375%" y="388" width="0.1836%" height="15" fill="rgb(220,122,19)" fg:x="1922" fg:w="37"/><text x="9.7875%" y="398.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (263 samples, 1.31%)</title><rect x="8.6592%" y="372" width="1.3051%" height="15" fill="rgb(250,228,42)" fg:x="1745" fg:w="263"/><text x="8.9092%" y="382.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:876) (27 samples, 0.13%)</title><rect x="9.8303%" y="388" width="0.1340%" height="15" fill="rgb(240,193,28)" fg:x="1981" fg:w="27"/><text x="10.0803%" y="398.50"></text></g><g><title>put_nowait (queue.py:191) (24 samples, 0.12%)</title><rect x="9.8452%" y="404" width="0.1191%" height="15" fill="rgb(216,20,37)" fg:x="1984" fg:w="24"/><text x="10.0952%" y="414.50"></text></g><g><title>contextmanager_in_threadpool (fastapi/concurrency.py:38) (270 samples, 1.34%)</title><rect x="8.6294%" y="356" width="1.3398%" height="15" fill="rgb(206,188,39)" fg:x="1739" fg:w="270"/><text x="8.8794%" y="366.50"></text></g><g><title>__aexit__ (contextlib.py:206) (285 samples, 1.41%)</title><rect x="8.5649%" y="340" width="1.4143%" height="15" fill="rgb(217,207,13)" fg:x="1726" fg:w="285"/><text x="8.8149%" y="350.50"></text></g><g><title>__aexit__ (contextlib.py:697) (294 samples, 1.46%)</title><rect x="8.5451%" y="324" width="1.4589%" height="15" fill="rgb(231,73,38)" fg:x="1722" fg:w="294"/><text x="8.7951%" y="334.50"></text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:14) (339 samples, 1.68%)</title><rect x="8.3615%" y="308" width="1.6822%" height="15" fill="rgb(225,20,46)" fg:x="1685" fg:w="339"/><text x="8.6115%" y="318.50"></text></g><g><title>__call__ (starlette/routing.py:715) (56 samples, 0.28%)</title><rect x="10.1380%" y="324" width="0.2779%" height="15" fill="rgb(210,31,41)" fg:x="2043" fg:w="56"/><text x="10.3880%" y="334.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:527) (27 samples, 0.13%)</title><rect x="11.0014%" y="388" width="0.1340%" height="15" fill="rgb(221,200,47)" fg:x="2217" fg:w="27"/><text x="11.2514%" y="398.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:533) (23 samples, 0.11%)</title><rect x="11.2793%" y="388" width="0.1141%" height="15" fill="rgb(226,26,5)" fg:x="2273" fg:w="23"/><text x="11.5293%" y="398.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:535) (36 samples, 0.18%)</title><rect x="11.4083%" y="388" width="0.1786%" height="15" fill="rgb(249,33,26)" fg:x="2299" fg:w="36"/><text x="11.6583%" y="398.50"></text></g><g><title>inner (typing.py:309) (22 samples, 0.11%)</title><rect x="11.4778%" y="404" width="0.1092%" height="15" fill="rgb(235,183,28)" fg:x="2313" fg:w="22"/><text x="11.7278%" y="414.50"></text></g><g><title>__init__ (starlette/datastructures.py:415) (31 samples, 0.15%)</title><rect x="11.7457%" y="436" width="0.1538%" height="15" fill="rgb(221,5,38)" fg:x="2367" fg:w="31"/><text x="11.9957%" y="446.50"></text></g><g><title>__init__ (starlette/datastructures.py:416) (25 samples, 0.12%)</title><rect x="11.8996%" y="436" width="0.1241%" height="15" fill="rgb(247,18,42)" fg:x="2398" fg:w="25"/><text x="12.1496%" y="446.50"></text></g><g><title>query_params (starlette/requests.py:119) (78 samples, 0.39%)</title><rect x="11.6812%" y="420" width="0.3871%" height="15" fill="rgb(241,131,45)" fg:x="2354" fg:w="78"/><text x="11.9312%" y="430.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:594) (79 samples, 0.39%)</title><rect x="11.6812%" y="404" width="0.3920%" height="15" fill="rgb(249,31,29)" fg:x="2354" fg:w="79"/><text x="11.9312%" y="414.50"></text></g><g><title>cookies (starlette/requests.py:130) (22 samples, 0.11%)</title><rect x="12.1576%" y="420" width="0.1092%" height="15" fill="rgb(225,111,53)" fg:x="2450" fg:w="22"/><text x="12.4076%" y="430.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:600) (28 samples, 0.14%)</title><rect x="12.1477%" y="404" width="0.1389%" height="15" fill="rgb(238,160,17)" fg:x="2448" fg:w="28"/><text x="12.3977%" y="414.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:555) (143 samples, 0.71%)</title><rect x="11.6118%" y="388" width="0.7096%" height="15" fill="rgb(214,148,48)" fg:x="2340" fg:w="143"/><text x="11.8618%" y="398.50"></text></g><g><title>is_gen_callable (fastapi/dependencies/utils.py:492) (27 samples, 0.13%)</title><rect x="12.3561%" y="404" width="0.1340%" height="15" fill="rgb(232,36,49)" fg:x="2490" fg:w="27"/><text x="12.6061%" y="414.50"></text></g><g><title>isgeneratorfunction (inspect.py:306) (26 samples, 0.13%)</title><rect x="12.3611%" y="420" width="0.1290%" height="15" fill="rgb(209,103,24)" fg:x="2491" fg:w="26"/><text x="12.6111%" y="430.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:577) (29 samples, 0.14%)</title><rect x="12.3511%" y="388" width="0.1439%" height="15" fill="rgb(229,88,8)" fg:x="2489" fg:w="29"/><text x="12.6011%" y="398.50"></text></g><g><title>solve_generator (fastapi/dependencies/utils.py:502) (50 samples, 0.25%)</title><rect x="12.5595%" y="404" width="0.2481%" height="15" fill="rgb(213,181,19)" fg:x="2531" fg:w="50"/><text x="12.8095%" y="414.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (29 samples, 0.14%)</title><rect x="13.2096%" y="484" width="0.1439%" height="15" fill="rgb(254,191,54)" fg:x="2662" fg:w="29"/><text x="13.4596%" y="494.50"></text></g><g><title>contextmanager_in_threadpool (fastapi/concurrency.py:26) (86 samples, 0.43%)</title><rect x="12.9615%" y="452" width="0.4268%" height="15" fill="rgb(241,83,37)" fg:x="2612" fg:w="86"/><text x="13.2115%" y="462.50"></text></g><g><title>__new__ (anyio/_core/_synchronization.py:380) (66 samples, 0.33%)</title><rect x="13.0607%" y="468" width="0.3275%" height="15" fill="rgb(233,36,39)" fg:x="2632" fg:w="66"/><text x="13.3107%" y="478.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (63 samples, 0.31%)</title><rect x="14.0532%" y="564" width="0.3126%" height="15" fill="rgb(226,3,54)" fg:x="2832" fg:w="63"/><text x="14.3032%" y="574.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (68 samples, 0.34%)</title><rect x="14.0482%" y="548" width="0.3374%" height="15" fill="rgb(245,192,40)" fg:x="2831" fg:w="68"/><text x="14.2982%" y="558.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (109 samples, 0.54%)</title><rect x="13.8795%" y="516" width="0.5409%" height="15" fill="rgb(238,167,29)" fg:x="2797" fg:w="109"/><text x="14.1295%" y="526.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (103 samples, 0.51%)</title><rect x="13.9093%" y="532" width="0.5111%" height="15" fill="rgb(232,182,51)" fg:x="2803" fg:w="103"/><text x="14.1593%" y="542.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (136 samples, 0.67%)</title><rect x="13.8547%" y="500" width="0.6749%" height="15" fill="rgb(231,60,39)" fg:x="2792" fg:w="136"/><text x="14.1047%" y="510.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (34 samples, 0.17%)</title><rect x="14.5296%" y="500" width="0.1687%" height="15" fill="rgb(208,69,12)" fg:x="2928" fg:w="34"/><text x="14.7796%" y="510.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (336 samples, 1.67%)</title><rect x="13.4577%" y="484" width="1.6673%" height="15" fill="rgb(235,93,37)" fg:x="2712" fg:w="336"/><text x="13.7077%" y="494.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:876) (50 samples, 0.25%)</title><rect x="14.8769%" y="500" width="0.2481%" height="15" fill="rgb(213,116,39)" fg:x="2998" fg:w="50"/><text x="15.1269%" y="510.50"></text></g><g><title>put_nowait (queue.py:191) (46 samples, 0.23%)</title><rect x="14.8968%" y="516" width="0.2283%" height="15" fill="rgb(222,207,29)" fg:x="3002" fg:w="46"/><text x="15.1468%" y="526.50"></text></g><g><title>enter_async_context (contextlib.py:619) (460 samples, 2.28%)</title><rect x="12.8573%" y="420" width="2.2827%" height="15" fill="rgb(206,96,30)" fg:x="2591" fg:w="460"/><text x="13.1073%" y="430.50">e..</text></g><g><title>__aenter__ (contextlib.py:199) (450 samples, 2.23%)</title><rect x="12.9069%" y="436" width="2.2330%" height="15" fill="rgb(218,138,4)" fg:x="2601" fg:w="450"/><text x="13.1569%" y="446.50">_..</text></g><g><title>contextmanager_in_threadpool (fastapi/concurrency.py:28) (353 samples, 1.75%)</title><rect x="13.3882%" y="452" width="1.7517%" height="15" fill="rgb(250,191,14)" fg:x="2698" fg:w="353"/><text x="13.6382%" y="462.50"></text></g><g><title>run_in_threadpool (starlette/concurrency.py:41) (346 samples, 1.72%)</title><rect x="13.4230%" y="468" width="1.7170%" height="15" fill="rgb(239,60,40)" fg:x="2705" fg:w="346"/><text x="13.6730%" y="478.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:580) (543 samples, 2.69%)</title><rect x="12.5050%" y="388" width="2.6945%" height="15" fill="rgb(206,27,48)" fg:x="2520" fg:w="543"/><text x="12.7550%" y="398.50">so..</text></g><g><title>solve_generator (fastapi/dependencies/utils.py:505) (482 samples, 2.39%)</title><rect x="12.8077%" y="404" width="2.3918%" height="15" fill="rgb(225,35,8)" fg:x="2581" fg:w="482"/><text x="13.0577%" y="414.50">so..</text></g><g><title>app (fastapi/routing.py:271) (869 samples, 4.31%)</title><rect x="10.9766%" y="372" width="4.3122%" height="15" fill="rgb(250,213,24)" fg:x="2212" fg:w="869"/><text x="11.2266%" y="382.50">app (..</text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:844) (25 samples, 0.12%)</title><rect x="15.5915%" y="436" width="0.1241%" height="15" fill="rgb(247,123,22)" fg:x="3142" fg:w="25"/><text x="15.8415%" y="446.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (42 samples, 0.21%)</title><rect x="15.9190%" y="500" width="0.2084%" height="15" fill="rgb(231,138,38)" fg:x="3208" fg:w="42"/><text x="16.1690%" y="510.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (77 samples, 0.38%)</title><rect x="15.7999%" y="452" width="0.3821%" height="15" fill="rgb(231,145,46)" fg:x="3184" fg:w="77"/><text x="16.0499%" y="462.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (76 samples, 0.38%)</title><rect x="15.8049%" y="468" width="0.3771%" height="15" fill="rgb(251,118,11)" fg:x="3185" fg:w="76"/><text x="16.0549%" y="478.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (55 samples, 0.27%)</title><rect x="15.9091%" y="484" width="0.2729%" height="15" fill="rgb(217,147,25)" fg:x="3206" fg:w="55"/><text x="16.1591%" y="494.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (98 samples, 0.49%)</title><rect x="15.7652%" y="436" width="0.4863%" height="15" fill="rgb(247,81,37)" fg:x="3177" fg:w="98"/><text x="16.0152%" y="446.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (33 samples, 0.16%)</title><rect x="16.2515%" y="436" width="0.1638%" height="15" fill="rgb(209,12,38)" fg:x="3275" fg:w="33"/><text x="16.5015%" y="446.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (257 samples, 1.28%)</title><rect x="15.3831%" y="420" width="1.2753%" height="15" fill="rgb(227,1,9)" fg:x="3100" fg:w="257"/><text x="15.6331%" y="430.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:876) (25 samples, 0.12%)</title><rect x="16.5343%" y="436" width="0.1241%" height="15" fill="rgb(248,47,43)" fg:x="3332" fg:w="25"/><text x="16.7843%" y="446.50"></text></g><g><title>put_nowait (queue.py:191) (22 samples, 0.11%)</title><rect x="16.5492%" y="452" width="0.1092%" height="15" fill="rgb(221,10,30)" fg:x="3335" fg:w="22"/><text x="16.7992%" y="462.50"></text></g><g><title>app (fastapi/routing.py:278) (277 samples, 1.37%)</title><rect x="15.2888%" y="372" width="1.3746%" height="15" fill="rgb(210,229,1)" fg:x="3081" fg:w="277"/><text x="15.5388%" y="382.50"></text></g><g><title>run_endpoint_function (fastapi/routing.py:192) (276 samples, 1.37%)</title><rect x="15.2938%" y="388" width="1.3696%" height="15" fill="rgb(222,148,37)" fg:x="3082" fg:w="276"/><text x="15.5438%" y="398.50"></text></g><g><title>run_in_threadpool (starlette/concurrency.py:41) (266 samples, 1.32%)</title><rect x="15.3434%" y="404" width="1.3200%" height="15" fill="rgb(234,67,33)" fg:x="3092" fg:w="266"/><text x="15.5934%" y="414.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (40 samples, 0.20%)</title><rect x="17.1695%" y="500" width="0.1985%" height="15" fill="rgb(247,98,35)" fg:x="3460" fg:w="40"/><text x="17.4195%" y="510.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (45 samples, 0.22%)</title><rect x="17.1596%" y="484" width="0.2233%" height="15" fill="rgb(247,138,52)" fg:x="3458" fg:w="45"/><text x="17.4096%" y="494.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (61 samples, 0.30%)</title><rect x="17.1000%" y="452" width="0.3027%" height="15" fill="rgb(213,79,30)" fg:x="3446" fg:w="61"/><text x="17.3500%" y="462.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (60 samples, 0.30%)</title><rect x="17.1050%" y="468" width="0.2977%" height="15" fill="rgb(246,177,23)" fg:x="3447" fg:w="60"/><text x="17.3550%" y="478.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (86 samples, 0.43%)</title><rect x="17.0752%" y="436" width="0.4268%" height="15" fill="rgb(230,62,27)" fg:x="3441" fg:w="86"/><text x="17.3252%" y="446.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (42 samples, 0.21%)</title><rect x="17.5020%" y="436" width="0.2084%" height="15" fill="rgb(216,154,8)" fg:x="3527" fg:w="42"/><text x="17.7520%" y="446.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (235 samples, 1.17%)</title><rect x="16.8023%" y="420" width="1.1661%" height="15" fill="rgb(244,35,45)" fg:x="3386" fg:w="235"/><text x="17.0523%" y="430.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:876) (31 samples, 0.15%)</title><rect x="17.8146%" y="436" width="0.1538%" height="15" fill="rgb(251,115,12)" fg:x="3590" fg:w="31"/><text x="18.0646%" y="446.50"></text></g><g><title>put_nowait (queue.py:191) (28 samples, 0.14%)</title><rect x="17.8295%" y="452" width="0.1389%" height="15" fill="rgb(240,54,50)" fg:x="3593" fg:w="28"/><text x="18.0795%" y="462.50"></text></g><g><title>serialize_response (fastapi/routing.py:146) (252 samples, 1.25%)</title><rect x="16.7378%" y="388" width="1.2505%" height="15" fill="rgb(233,84,52)" fg:x="3373" fg:w="252"/><text x="16.9878%" y="398.50"></text></g><g><title>run_in_threadpool (starlette/concurrency.py:41) (248 samples, 1.23%)</title><rect x="16.7576%" y="404" width="1.2306%" height="15" fill="rgb(207,117,47)" fg:x="3377" fg:w="248"/><text x="17.0076%" y="414.50"></text></g><g><title>serialize_response (fastapi/routing.py:159) (530 samples, 2.63%)</title><rect x="18.0131%" y="388" width="2.6300%" height="15" fill="rgb(249,43,39)" fg:x="3630" fg:w="530"/><text x="18.2631%" y="398.50">se..</text></g><g><title>serialize (fastapi/_compat.py:141) (528 samples, 2.62%)</title><rect x="18.0230%" y="404" width="2.6201%" height="15" fill="rgb(209,38,44)" fg:x="3632" fg:w="528"/><text x="18.2730%" y="414.50">se..</text></g><g><title>dump_python (pydantic/type_adapter.py:268) (523 samples, 2.60%)</title><rect x="18.0478%" y="420" width="2.5953%" height="15" fill="rgb(236,212,23)" fg:x="3637" fg:w="523"/><text x="18.2978%" y="430.50">du..</text></g><g><title>app (fastapi/routing.py:303) (799 samples, 3.96%)</title><rect x="16.6832%" y="372" width="3.9649%" height="15" fill="rgb(242,79,21)" fg:x="3362" fg:w="799"/><text x="16.9332%" y="382.50">app ..</text></g><g><title>encode (json/encoder.py:199) (811 samples, 4.02%)</title><rect x="20.9160%" y="452" width="4.0244%" height="15" fill="rgb(211,96,35)" fg:x="4215" fg:w="811"/><text x="21.1660%" y="462.50">enco..</text></g><g><title>iterencode (json/encoder.py:257) (788 samples, 3.91%)</title><rect x="21.0302%" y="468" width="3.9103%" height="15" fill="rgb(253,215,40)" fg:x="4238" fg:w="788"/><text x="21.2802%" y="478.50">iter..</text></g><g><title>render (starlette/responses.py:199) (842 samples, 4.18%)</title><rect x="20.7821%" y="420" width="4.1782%" height="15" fill="rgb(211,81,21)" fg:x="4188" fg:w="842"/><text x="21.0321%" y="430.50">rende..</text></g><g><title>dumps (json/__init__.py:238) (819 samples, 4.06%)</title><rect x="20.8962%" y="436" width="4.0641%" height="15" fill="rgb(208,190,38)" fg:x="4211" fg:w="819"/><text x="21.1462%" y="446.50">dump..</text></g><g><title>__init__ (starlette/responses.py:55) (853 samples, 4.23%)</title><rect x="20.7622%" y="404" width="4.2328%" height="15" fill="rgb(235,213,38)" fg:x="4184" fg:w="853"/><text x="21.0122%" y="414.50">__ini..</text></g><g><title>__init__ (starlette/responses.py:196) (892 samples, 4.43%)</title><rect x="20.7076%" y="388" width="4.4264%" height="15" fill="rgb(237,122,38)" fg:x="4173" fg:w="892"/><text x="20.9576%" y="398.50">__ini..</text></g><g><title>__init__ (starlette/responses.py:56) (28 samples, 0.14%)</title><rect x="24.9950%" y="404" width="0.1389%" height="15" fill="rgb(244,218,35)" fg:x="5037" fg:w="28"/><text x="25.2450%" y="414.50"></text></g><g><title>app (fastapi/routing.py:305) (906 samples, 4.50%)</title><rect x="20.6630%" y="372" width="4.4958%" height="15" fill="rgb(240,68,47)" fg:x="4164" fg:w="906"/><text x="20.9130%" y="382.50">app (..</text></g><g><title>app (starlette/routing.py:66) (2,942 samples, 14.60%)</title><rect x="10.6788%" y="356" width="14.5990%" height="15" fill="rgb(210,16,53)" fg:x="2152" fg:w="2942"/><text x="10.9288%" y="366.50">app (starlette/routing..</text></g><g><title>app (fastapi/routing.py:306) (24 samples, 0.12%)</title><rect x="25.1588%" y="372" width="0.1191%" height="15" fill="rgb(235,124,12)" fg:x="5070" fg:w="24"/><text x="25.4088%" y="382.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:501) (24 samples, 0.12%)</title><rect x="25.5955%" y="420" width="0.1191%" height="15" fill="rgb(224,169,11)" fg:x="5158" fg:w="24"/><text x="25.8455%" y="430.50"></text></g><g><title>get_path_with_query_string (uvicorn/protocols/utils.py:49) (23 samples, 0.11%)</title><rect x="25.6004%" y="436" width="0.1141%" height="15" fill="rgb(250,166,2)" fg:x="5159" fg:w="23"/><text x="25.8504%" y="446.50"></text></g><g><title>__call__ (starlette/responses.py:164) (133 samples, 0.66%)</title><rect x="25.3027%" y="372" width="0.6600%" height="15" fill="rgb(242,216,29)" fg:x="5099" fg:w="133"/><text x="25.5527%" y="382.50"></text></g><g><title>sender (starlette/middleware/exceptions.py:65) (124 samples, 0.62%)</title><rect x="25.3474%" y="388" width="0.6153%" height="15" fill="rgb(230,116,27)" fg:x="5108" fg:w="124"/><text x="25.5974%" y="398.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (120 samples, 0.60%)</title><rect x="25.3672%" y="404" width="0.5955%" height="15" fill="rgb(228,99,48)" fg:x="5112" fg:w="120"/><text x="25.6172%" y="414.50"></text></g><g><title>__call__ (starlette/routing.py:718) (3,180 samples, 15.78%)</title><rect x="10.4605%" y="324" width="15.7801%" height="15" fill="rgb(253,11,6)" fg:x="2108" fg:w="3180"/><text x="10.7105%" y="334.50">__call__ (starlette/rout..</text></g><g><title>handle (starlette/routing.py:276) (3,171 samples, 15.74%)</title><rect x="10.5052%" y="340" width="15.7354%" height="15" fill="rgb(247,143,39)" fg:x="2117" fg:w="3171"/><text x="10.7552%" y="350.50">handle (starlette/routin..</text></g><g><title>app (starlette/routing.py:69) (194 samples, 0.96%)</title><rect x="25.2779%" y="356" width="0.9627%" height="15" fill="rgb(236,97,10)" fg:x="5094" fg:w="194"/><text x="25.5279%" y="366.50"></text></g><g><title>__call__ (starlette/responses.py:171) (56 samples, 0.28%)</title><rect x="25.9627%" y="372" width="0.2779%" height="15" fill="rgb(233,208,19)" fg:x="5232" fg:w="56"/><text x="26.2127%" y="382.50"></text></g><g><title>sender (starlette/middleware/exceptions.py:65) (53 samples, 0.26%)</title><rect x="25.9776%" y="388" width="0.2630%" height="15" fill="rgb(216,164,2)" fg:x="5235" fg:w="53"/><text x="26.2276%" y="398.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (51 samples, 0.25%)</title><rect x="25.9875%" y="404" width="0.2531%" height="15" fill="rgb(220,129,5)" fg:x="5237" fg:w="51"/><text x="26.2375%" y="414.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:573) (36 samples, 0.18%)</title><rect x="26.0619%" y="420" width="0.1786%" height="15" fill="rgb(242,17,10)" fg:x="5252" fg:w="36"/><text x="26.3119%" y="430.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/httptools_impl.py:426) (3,722 samples, 18.47%)</title><rect x="7.8206%" y="212" width="18.4696%" height="15" fill="rgb(242,107,0)" fg:x="1576" fg:w="3722"/><text x="8.0706%" y="222.50">run_asgi (uvicorn/protocols/h..</text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (3,677 samples, 18.25%)</title><rect x="8.0439%" y="228" width="18.2463%" height="15" fill="rgb(251,28,31)" fg:x="1621" fg:w="3677"/><text x="8.2939%" y="238.50">__call__ (uvicorn/middleware..</text></g><g><title>__call__ (fastapi/applications.py:292) (3,671 samples, 18.22%)</title><rect x="8.0736%" y="244" width="18.2166%" height="15" fill="rgb(233,223,10)" fg:x="1627" fg:w="3671"/><text x="8.3236%" y="254.50">__call__ (fastapi/applicatio..</text></g><g><title>__call__ (starlette/applications.py:122) (3,655 samples, 18.14%)</title><rect x="8.1530%" y="260" width="18.1372%" height="15" fill="rgb(215,21,27)" fg:x="1643" fg:w="3655"/><text x="8.4030%" y="270.50">__call__ (starlette/applicat..</text></g><g><title>__call__ (starlette/middleware/errors.py:162) (3,641 samples, 18.07%)</title><rect x="8.2225%" y="276" width="18.0677%" height="15" fill="rgb(232,23,21)" fg:x="1657" fg:w="3641"/><text x="8.4725%" y="286.50">__call__ (starlette/middlewa..</text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (3,627 samples, 18.00%)</title><rect x="8.2920%" y="292" width="17.9982%" height="15" fill="rgb(244,5,23)" fg:x="1671" fg:w="3627"/><text x="8.5420%" y="302.50">__call__ (starlette/middlewa..</text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (3,272 samples, 16.24%)</title><rect x="10.0536%" y="308" width="16.2366%" height="15" fill="rgb(226,81,46)" fg:x="2026" fg:w="3272"/><text x="10.3036%" y="318.50">__call__ (fastapi/middlew..</text></g><g><title>&lt;module&gt; (fastapi/routing.py:22) (51 samples, 0.25%)</title><rect x="26.3448%" y="692" width="0.2531%" height="15" fill="rgb(247,70,30)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (51 samples, 0.25%)</title><rect x="26.3448%" y="708" width="0.2531%" height="15" fill="rgb(212,68,19)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (51 samples, 0.25%)</title><rect x="26.3448%" y="724" width="0.2531%" height="15" fill="rgb(240,187,13)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (51 samples, 0.25%)</title><rect x="26.3448%" y="740" width="0.2531%" height="15" fill="rgb(223,113,26)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (51 samples, 0.25%)</title><rect x="26.3448%" y="756" width="0.2531%" height="15" fill="rgb(206,192,2)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (51 samples, 0.25%)</title><rect x="26.3448%" y="772" width="0.2531%" height="15" fill="rgb(241,108,4)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (51 samples, 0.25%)</title><rect x="26.3448%" y="788" width="0.2531%" height="15" fill="rgb(247,173,49)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (51 samples, 0.25%)</title><rect x="26.3448%" y="804" width="0.2531%" height="15" fill="rgb(224,114,35)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="814.50"></text></g><g><title>&lt;module&gt; (fastapi/params.py:5) (51 samples, 0.25%)</title><rect x="26.3448%" y="820" width="0.2531%" height="15" fill="rgb(245,159,27)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (51 samples, 0.25%)</title><rect x="26.3448%" y="836" width="0.2531%" height="15" fill="rgb(245,172,44)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (51 samples, 0.25%)</title><rect x="26.3448%" y="852" width="0.2531%" height="15" fill="rgb(236,23,11)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (51 samples, 0.25%)</title><rect x="26.3448%" y="868" width="0.2531%" height="15" fill="rgb(205,117,38)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (51 samples, 0.25%)</title><rect x="26.3448%" y="884" width="0.2531%" height="15" fill="rgb(237,72,25)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (51 samples, 0.25%)</title><rect x="26.3448%" y="900" width="0.2531%" height="15" fill="rgb(244,70,9)" fg:x="5309" fg:w="51"/><text x="26.5948%" y="910.50"></text></g><g><title>&lt;module&gt; (app/main.py:1) (52 samples, 0.26%)</title><rect x="26.3448%" y="372" width="0.2580%" height="15" fill="rgb(217,125,39)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.26%)</title><rect x="26.3448%" y="388" width="0.2580%" height="15" fill="rgb(235,36,10)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.26%)</title><rect x="26.3448%" y="404" width="0.2580%" height="15" fill="rgb(251,123,47)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.26%)</title><rect x="26.3448%" y="420" width="0.2580%" height="15" fill="rgb(221,13,13)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.26%)</title><rect x="26.3448%" y="436" width="0.2580%" height="15" fill="rgb(238,131,9)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="26.3448%" y="452" width="0.2580%" height="15" fill="rgb(211,50,8)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="462.50"></text></g><g><title>&lt;module&gt; (fastapi/__init__.py:7) (52 samples, 0.26%)</title><rect x="26.3448%" y="468" width="0.2580%" height="15" fill="rgb(245,182,24)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.26%)</title><rect x="26.3448%" y="484" width="0.2580%" height="15" fill="rgb(242,14,37)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.26%)</title><rect x="26.3448%" y="500" width="0.2580%" height="15" fill="rgb(246,228,12)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.26%)</title><rect x="26.3448%" y="516" width="0.2580%" height="15" fill="rgb(213,55,15)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.26%)</title><rect x="26.3448%" y="532" width="0.2580%" height="15" fill="rgb(209,9,3)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="26.3448%" y="548" width="0.2580%" height="15" fill="rgb(230,59,30)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="558.50"></text></g><g><title>&lt;module&gt; (fastapi/applications.py:16) (52 samples, 0.26%)</title><rect x="26.3448%" y="564" width="0.2580%" height="15" fill="rgb(209,121,21)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="574.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (52 samples, 0.26%)</title><rect x="26.3448%" y="580" width="0.2580%" height="15" fill="rgb(220,109,13)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="26.3448%" y="596" width="0.2580%" height="15" fill="rgb(232,18,1)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.26%)</title><rect x="26.3448%" y="612" width="0.2580%" height="15" fill="rgb(215,41,42)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.26%)</title><rect x="26.3448%" y="628" width="0.2580%" height="15" fill="rgb(224,123,36)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.26%)</title><rect x="26.3448%" y="644" width="0.2580%" height="15" fill="rgb(240,125,3)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.26%)</title><rect x="26.3448%" y="660" width="0.2580%" height="15" fill="rgb(205,98,50)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="26.3448%" y="676" width="0.2580%" height="15" fill="rgb(205,185,37)" fg:x="5309" fg:w="52"/><text x="26.5948%" y="686.50"></text></g><g><title>serve (uvicorn/server.py:68) (71 samples, 0.35%)</title><rect x="26.3448%" y="212" width="0.3523%" height="15" fill="rgb(238,207,15)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="222.50"></text></g><g><title>load (uvicorn/config.py:467) (71 samples, 0.35%)</title><rect x="26.3448%" y="228" width="0.3523%" height="15" fill="rgb(213,199,42)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="238.50"></text></g><g><title>import_from_string (uvicorn/importer.py:21) (71 samples, 0.35%)</title><rect x="26.3448%" y="244" width="0.3523%" height="15" fill="rgb(235,201,11)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="254.50"></text></g><g><title>import_module (importlib/__init__.py:126) (71 samples, 0.35%)</title><rect x="26.3448%" y="260" width="0.3523%" height="15" fill="rgb(207,46,11)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="270.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (71 samples, 0.35%)</title><rect x="26.3448%" y="276" width="0.3523%" height="15" fill="rgb(241,35,35)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (71 samples, 0.35%)</title><rect x="26.3448%" y="292" width="0.3523%" height="15" fill="rgb(243,32,47)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (71 samples, 0.35%)</title><rect x="26.3448%" y="308" width="0.3523%" height="15" fill="rgb(247,202,23)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (71 samples, 0.35%)</title><rect x="26.3448%" y="324" width="0.3523%" height="15" fill="rgb(219,102,11)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (71 samples, 0.35%)</title><rect x="26.3448%" y="340" width="0.3523%" height="15" fill="rgb(243,110,44)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (71 samples, 0.35%)</title><rect x="26.3448%" y="356" width="0.3523%" height="15" fill="rgb(222,74,54)" fg:x="5309" fg:w="71"/><text x="26.5948%" y="366.50"></text></g><g><title>&lt;module&gt; (uvicorn:8) (5,378 samples, 26.69%)</title><rect x="0.0347%" y="68" width="26.6872%" height="15" fill="rgb(216,99,12)" fg:x="7" fg:w="5378"/><text x="0.2847%" y="78.50">&lt;module&gt; (uvicorn:8)</text></g><g><title>__call__ (click/core.py:1157) (5,378 samples, 26.69%)</title><rect x="0.0347%" y="84" width="26.6872%" height="15" fill="rgb(226,22,26)" fg:x="7" fg:w="5378"/><text x="0.2847%" y="94.50">__call__ (click/core.py:1157)</text></g><g><title>main (click/core.py:1078) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="100" width="26.6773%" height="15" fill="rgb(217,163,10)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="110.50">main (click/core.py:1078)</text></g><g><title>invoke (click/core.py:1434) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="116" width="26.6773%" height="15" fill="rgb(213,25,53)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="126.50">invoke (click/core.py:1434)</text></g><g><title>invoke (click/core.py:782) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="132" width="26.6773%" height="15" fill="rgb(252,105,26)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="142.50">invoke (click/core.py:782)</text></g><g><title>main (uvicorn/main.py:416) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="148" width="26.6773%" height="15" fill="rgb(220,39,43)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="158.50">main (uvicorn/main.py:416)</text></g><g><title>run (uvicorn/main.py:587) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="164" width="26.6773%" height="15" fill="rgb(229,68,48)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="174.50">run (uvicorn/main.py:587)</text></g><g><title>run (uvicorn/server.py:61) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="180" width="26.6773%" height="15" fill="rgb(252,8,32)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="190.50">run (uvicorn/server.py:61)</text></g><g><title>run (asyncio/runners.py:44) (5,376 samples, 26.68%)</title><rect x="0.0447%" y="196" width="26.6773%" height="15" fill="rgb(223,20,43)" fg:x="9" fg:w="5376"/><text x="0.2947%" y="206.50">run (asyncio/runners.py:44)</text></g><g><title>task_done (queue.py:71) (36 samples, 0.18%)</title><rect x="26.7666%" y="116" width="0.1786%" height="15" fill="rgb(229,81,49)" fg:x="5394" fg:w="36"/><text x="27.0166%" y="126.50"></text></g><g><title>task_done (queue.py:76) (23 samples, 0.11%)</title><rect x="26.9601%" y="116" width="0.1141%" height="15" fill="rgb(236,28,36)" fg:x="5433" fg:w="23"/><text x="27.2101%" y="126.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:794) (73 samples, 0.36%)</title><rect x="26.7219%" y="100" width="0.3622%" height="15" fill="rgb(249,185,26)" fg:x="5385" fg:w="73"/><text x="26.9719%" y="110.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:797) (31 samples, 0.15%)</title><rect x="27.0891%" y="100" width="0.1538%" height="15" fill="rgb(249,174,33)" fg:x="5459" fg:w="31"/><text x="27.3391%" y="110.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:802) (42 samples, 0.21%)</title><rect x="27.2430%" y="100" width="0.2084%" height="15" fill="rgb(233,201,37)" fg:x="5490" fg:w="42"/><text x="27.4930%" y="110.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:804) (51 samples, 0.25%)</title><rect x="27.4514%" y="100" width="0.2531%" height="15" fill="rgb(221,78,26)" fg:x="5532" fg:w="51"/><text x="27.7014%" y="110.50"></text></g><g><title>_close_impl (sqlalchemy/orm/session.py:2452) (44 samples, 0.22%)</title><rect x="27.8484%" y="164" width="0.2183%" height="15" fill="rgb(250,127,30)" fg:x="5612" fg:w="44"/><text x="28.0984%" y="174.50"></text></g><g><title>expunge_all (sqlalchemy/orm/session.py:2471) (38 samples, 0.19%)</title><rect x="27.8781%" y="180" width="0.1886%" height="15" fill="rgb(230,49,44)" fg:x="5618" fg:w="38"/><text x="28.1281%" y="190.50"></text></g><g><title>close (sqlalchemy/orm/session.py:1345) (881 samples, 4.37%)</title><rect x="28.1262%" y="212" width="4.3718%" height="15" fill="rgb(229,67,23)" fg:x="5668" fg:w="881"/><text x="28.3762%" y="222.50">close..</text></g><g><title>close (sqlalchemy/engine/base.py:2572) (880 samples, 4.37%)</title><rect x="28.1312%" y="228" width="4.3668%" height="15" fill="rgb(249,83,47)" fg:x="5669" fg:w="880"/><text x="28.3812%" y="238.50">close..</text></g><g><title>_do_close (sqlalchemy/engine/base.py:2710) (880 samples, 4.37%)</title><rect x="28.1312%" y="244" width="4.3668%" height="15" fill="rgb(215,43,3)" fg:x="5669" fg:w="880"/><text x="28.3812%" y="254.50">_do_c..</text></g><g><title>_close_impl (sqlalchemy/engine/base.py:2696) (878 samples, 4.36%)</title><rect x="28.1411%" y="260" width="4.3569%" height="15" fill="rgb(238,154,13)" fg:x="5671" fg:w="878"/><text x="28.3911%" y="270.50">_clos..</text></g><g><title>_connection_rollback_impl (sqlalchemy/engine/base.py:2688) (878 samples, 4.36%)</title><rect x="28.1411%" y="276" width="4.3569%" height="15" fill="rgb(219,56,2)" fg:x="5671" fg:w="878"/><text x="28.3911%" y="286.50">_conn..</text></g><g><title>_rollback_impl (sqlalchemy/engine/base.py:1115) (873 samples, 4.33%)</title><rect x="28.1659%" y="292" width="4.3321%" height="15" fill="rgb(233,0,4)" fg:x="5676" fg:w="873"/><text x="28.4159%" y="302.50">_roll..</text></g><g><title>do_rollback (sqlalchemy/engine/default.py:691) (870 samples, 4.32%)</title><rect x="28.1808%" y="308" width="4.3172%" height="15" fill="rgb(235,30,7)" fg:x="5679" fg:w="870"/><text x="28.4308%" y="318.50">do_ro..</text></g><g><title>_finalize_fairy (sqlalchemy/pool/base.py:1044) (25 samples, 0.12%)</title><rect x="32.5030%" y="276" width="0.1241%" height="15" fill="rgb(250,79,13)" fg:x="6550" fg:w="25"/><text x="32.7530%" y="286.50"></text></g><g><title>checkin (sqlalchemy/pool/base.py:774) (25 samples, 0.12%)</title><rect x="32.5030%" y="292" width="0.1241%" height="15" fill="rgb(211,146,34)" fg:x="6550" fg:w="25"/><text x="32.7530%" y="302.50"></text></g><g><title>_return_conn (sqlalchemy/pool/base.py:461) (25 samples, 0.12%)</title><rect x="32.5030%" y="308" width="0.1241%" height="15" fill="rgb(228,22,38)" fg:x="6550" fg:w="25"/><text x="32.7530%" y="318.50"></text></g><g><title>_do_return_conn (sqlalchemy/pool/impl.py:139) (24 samples, 0.12%)</title><rect x="32.5079%" y="324" width="0.1191%" height="15" fill="rgb(235,168,5)" fg:x="6551" fg:w="24"/><text x="32.7579%" y="334.50"></text></g><g><title>close (sqlalchemy/pool/base.py:786) (24 samples, 0.12%)</title><rect x="32.5079%" y="340" width="0.1191%" height="15" fill="rgb(221,155,16)" fg:x="6551" fg:w="24"/><text x="32.7579%" y="350.50"></text></g><g><title>__close (sqlalchemy/pool/base.py:885) (24 samples, 0.12%)</title><rect x="32.5079%" y="356" width="0.1191%" height="15" fill="rgb(215,215,53)" fg:x="6551" fg:w="24"/><text x="32.7579%" y="366.50"></text></g><g><title>_close_connection (sqlalchemy/pool/base.py:379) (24 samples, 0.12%)</title><rect x="32.5079%" y="372" width="0.1191%" height="15" fill="rgb(223,4,10)" fg:x="6551" fg:w="24"/><text x="32.7579%" y="382.50"></text></g><g><title>do_close (sqlalchemy/engine/default.py:700) (24 samples, 0.12%)</title><rect x="32.5079%" y="388" width="0.1191%" height="15" fill="rgb(234,103,6)" fg:x="6551" fg:w="24"/><text x="32.7579%" y="398.50"></text></g><g><title>close (sqlalchemy/orm/session.py:1347) (35 samples, 0.17%)</title><rect x="32.4980%" y="212" width="0.1737%" height="15" fill="rgb(227,97,0)" fg:x="6549" fg:w="35"/><text x="32.7480%" y="222.50"></text></g><g><title>close (sqlalchemy/engine/base.py:1245) (35 samples, 0.17%)</title><rect x="32.4980%" y="228" width="0.1737%" height="15" fill="rgb(234,150,53)" fg:x="6549" fg:w="35"/><text x="32.7480%" y="238.50"></text></g><g><title>close (sqlalchemy/pool/base.py:1514) (34 samples, 0.17%)</title><rect x="32.5030%" y="244" width="0.1687%" height="15" fill="rgb(228,201,54)" fg:x="6550" fg:w="34"/><text x="32.7530%" y="254.50"></text></g><g><title>_checkin (sqlalchemy/pool/base.py:1389) (34 samples, 0.17%)</title><rect x="32.5030%" y="260" width="0.1687%" height="15" fill="rgb(222,22,37)" fg:x="6550" fg:w="34"/><text x="32.7530%" y="270.50"></text></g><g><title>__exit__ (contextlib.py:142) (976 samples, 4.84%)</title><rect x="27.8335%" y="116" width="4.8432%" height="15" fill="rgb(237,53,32)" fg:x="5609" fg:w="976"/><text x="28.0835%" y="126.50">__exit..</text></g><g><title>get_db (app/main.py:18) (974 samples, 4.83%)</title><rect x="27.8434%" y="132" width="4.8333%" height="15" fill="rgb(233,25,53)" fg:x="5611" fg:w="974"/><text x="28.0934%" y="142.50">get_db..</text></g><g><title>close (sqlalchemy/orm/session.py:2413) (974 samples, 4.83%)</title><rect x="27.8434%" y="148" width="4.8333%" height="15" fill="rgb(210,40,34)" fg:x="5611" fg:w="974"/><text x="28.0934%" y="158.50">close ..</text></g><g><title>_close_impl (sqlalchemy/orm/session.py:2455) (927 samples, 4.60%)</title><rect x="28.0766%" y="164" width="4.6000%" height="15" fill="rgb(241,220,44)" fg:x="5658" fg:w="927"/><text x="28.3266%" y="174.50">_clos..</text></g><g><title>close (&lt;string&gt;:2) (927 samples, 4.60%)</title><rect x="28.0766%" y="180" width="4.6000%" height="15" fill="rgb(235,28,35)" fg:x="5658" fg:w="927"/><text x="28.3266%" y="190.50">close..</text></g><g><title>_go (sqlalchemy/orm/state_changes.py:139) (923 samples, 4.58%)</title><rect x="28.0965%" y="196" width="4.5802%" height="15" fill="rgb(210,56,17)" fg:x="5662" fg:w="923"/><text x="28.3465%" y="206.50">_go (..</text></g><g><title>_iter (sqlalchemy/orm/query.py:2841) (31 samples, 0.15%)</title><rect x="32.9496%" y="164" width="0.1538%" height="15" fill="rgb(224,130,29)" fg:x="6640" fg:w="31"/><text x="33.1996%" y="174.50"></text></g><g><title>__init__ (sqlalchemy/orm/session.py:899) (36 samples, 0.18%)</title><rect x="33.4458%" y="244" width="0.1786%" height="15" fill="rgb(235,212,8)" fg:x="6740" fg:w="36"/><text x="33.6958%" y="254.50"></text></g><g><title>_connection_for_bind (sqlalchemy/orm/session.py:2000) (55 samples, 0.27%)</title><rect x="33.4111%" y="212" width="0.2729%" height="15" fill="rgb(223,33,50)" fg:x="6733" fg:w="55"/><text x="33.6611%" y="222.50"></text></g><g><title>_autobegin_t (sqlalchemy/orm/session.py:1775) (53 samples, 0.26%)</title><rect x="33.4210%" y="228" width="0.2630%" height="15" fill="rgb(219,149,13)" fg:x="6735" fg:w="53"/><text x="33.6710%" y="238.50"></text></g><g><title>_do_get (sqlalchemy/pool/impl.py:148) (21 samples, 0.10%)</title><rect x="33.8279%" y="372" width="0.1042%" height="15" fill="rgb(250,156,29)" fg:x="6817" fg:w="21"/><text x="34.0779%" y="382.50"></text></g><g><title>checkout (sqlalchemy/pool/base.py:716) (3,583 samples, 17.78%)</title><rect x="33.8180%" y="356" width="17.7799%" height="15" fill="rgb(216,193,19)" fg:x="6815" fg:w="3583"/><text x="34.0680%" y="366.50">checkout (sqlalchemy/pool/ba..</text></g><g><title>_do_get (sqlalchemy/pool/impl.py:167) (3,559 samples, 17.66%)</title><rect x="33.9371%" y="372" width="17.6608%" height="15" fill="rgb(216,135,14)" fg:x="6839" fg:w="3559"/><text x="34.1871%" y="382.50">_do_get (sqlalchemy/pool/im..</text></g><g><title>_create_connection (sqlalchemy/pool/base.py:393) (3,559 samples, 17.66%)</title><rect x="33.9371%" y="388" width="17.6608%" height="15" fill="rgb(241,47,5)" fg:x="6839" fg:w="3559"/><text x="34.1871%" y="398.50">_create_connection (sqlalch..</text></g><g><title>__init__ (sqlalchemy/pool/base.py:678) (3,559 samples, 17.66%)</title><rect x="33.9371%" y="404" width="17.6608%" height="15" fill="rgb(233,42,35)" fg:x="6839" fg:w="3559"/><text x="34.1871%" y="414.50">__init__ (sqlalchemy/pool/b..</text></g><g><title>__connect (sqlalchemy/pool/base.py:898) (3,559 samples, 17.66%)</title><rect x="33.9371%" y="420" width="17.6608%" height="15" fill="rgb(231,13,6)" fg:x="6839" fg:w="3559"/><text x="34.1871%" y="430.50">__connect (sqlalchemy/pool/..</text></g><g><title>connect (sqlalchemy/engine/create.py:637) (3,559 samples, 17.66%)</title><rect x="33.9371%" y="436" width="17.6608%" height="15" fill="rgb(207,181,40)" fg:x="6839" fg:w="3559"/><text x="34.1871%" y="446.50">connect (sqlalchemy/engine/..</text></g><g><title>connect (sqlalchemy/engine/default.py:615) (3,558 samples, 17.66%)</title><rect x="33.9420%" y="452" width="17.6558%" height="15" fill="rgb(254,173,49)" fg:x="6840" fg:w="3558"/><text x="34.1920%" y="462.50">connect (sqlalchemy/engine/..</text></g><g><title>connect (psycopg2/__init__.py:122) (3,546 samples, 17.60%)</title><rect x="34.0016%" y="468" width="17.5963%" height="15" fill="rgb(221,1,38)" fg:x="6852" fg:w="3546"/><text x="34.2516%" y="478.50">connect (psycopg2/__init__...</text></g><g><title>_checkout (sqlalchemy/pool/base.py:1267) (3,601 samples, 17.87%)</title><rect x="33.7981%" y="340" width="17.8692%" height="15" fill="rgb(206,124,46)" fg:x="6811" fg:w="3601"/><text x="34.0481%" y="350.50">_checkout (sqlalchemy/pool/b..</text></g><g><title>__init__ (sqlalchemy/engine/base.py:145) (3,609 samples, 17.91%)</title><rect x="33.7783%" y="292" width="17.9089%" height="15" fill="rgb(249,21,11)" fg:x="6807" fg:w="3609"/><text x="34.0283%" y="302.50">__init__ (sqlalchemy/engine/..</text></g><g><title>raw_connection (sqlalchemy/engine/base.py:3288) (3,608 samples, 17.90%)</title><rect x="33.7832%" y="308" width="17.9039%" height="15" fill="rgb(222,201,40)" fg:x="6808" fg:w="3608"/><text x="34.0332%" y="318.50">raw_connection (sqlalchemy/e..</text></g><g><title>connect (sqlalchemy/pool/base.py:452) (3,608 samples, 17.90%)</title><rect x="33.7832%" y="324" width="17.9039%" height="15" fill="rgb(235,61,29)" fg:x="6808" fg:w="3608"/><text x="34.0332%" y="334.50">connect (sqlalchemy/pool/bas..</text></g><g><title>_connection_for_bind (sqlalchemy/orm/session.py:1126) (3,648 samples, 18.10%)</title><rect x="33.7485%" y="260" width="18.1024%" height="15" fill="rgb(219,207,3)" fg:x="6801" fg:w="3648"/><text x="33.9985%" y="270.50">_connection_for_bind (sqlalc..</text></g><g><title>connect (sqlalchemy/engine/base.py:3264) (3,647 samples, 18.10%)</title><rect x="33.7535%" y="276" width="18.0975%" height="15" fill="rgb(222,56,46)" fg:x="6802" fg:w="3647"/><text x="34.0035%" y="286.50">connect (sqlalchemy/engine/b..</text></g><g><title>_go (sqlalchemy/orm/state_changes.py:139) (3,680 samples, 18.26%)</title><rect x="33.7237%" y="244" width="18.2612%" height="15" fill="rgb(239,76,54)" fg:x="6796" fg:w="3680"/><text x="33.9737%" y="254.50">_go (sqlalchemy/orm/state_ch..</text></g><g><title>_execute_internal (sqlalchemy/orm/session.py:2134) (3,750 samples, 18.61%)</title><rect x="33.3863%" y="196" width="18.6086%" height="15" fill="rgb(231,124,27)" fg:x="6728" fg:w="3750"/><text x="33.6363%" y="206.50">_execute_internal (sqlalchemy..</text></g><g><title>_connection_for_bind (sqlalchemy/orm/session.py:2001) (3,690 samples, 18.31%)</title><rect x="33.6840%" y="212" width="18.3108%" height="15" fill="rgb(249,195,6)" fg:x="6788" fg:w="3690"/><text x="33.9340%" y="222.50">_connection_for_bind (sqlalch..</text></g><g><title>_connection_for_bind (&lt;string&gt;:2) (3,690 samples, 18.31%)</title><rect x="33.6840%" y="228" width="18.3108%" height="15" fill="rgb(237,174,47)" fg:x="6788" fg:w="3690"/><text x="33.9340%" y="238.50">_connection_for_bind (&lt;string..</text></g><g><title>_gen_cache_key (sqlalchemy/sql/cache_key.py:259) (30 samples, 0.15%)</title><rect x="52.3769%" y="340" width="0.1489%" height="15" fill="rgb(206,201,31)" fg:x="10555" fg:w="30"/><text x="52.6269%" y="350.50"></text></g><g><title>_gen_cache_key (sqlalchemy/sql/cache_key.py:280) (82 samples, 0.41%)</title><rect x="52.5854%" y="340" width="0.4069%" height="15" fill="rgb(231,57,52)" fg:x="10597" fg:w="82"/><text x="52.8354%" y="350.50"></text></g><g><title>_gen_cache_key_inst (sqlalchemy/sql/base.py:984) (49 samples, 0.24%)</title><rect x="52.7491%" y="356" width="0.2432%" height="15" fill="rgb(248,177,22)" fg:x="10630" fg:w="49"/><text x="52.9991%" y="366.50"></text></g><g><title>_gen_cache_key (sqlalchemy/sql/cache_key.py:320) (70 samples, 0.35%)</title><rect x="53.1014%" y="340" width="0.3474%" height="15" fill="rgb(215,211,37)" fg:x="10701" fg:w="70"/><text x="53.3514%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/sql/cache_key.py:321) (65 samples, 0.32%)</title><rect x="53.1262%" y="356" width="0.3225%" height="15" fill="rgb(241,128,51)" fg:x="10706" fg:w="65"/><text x="53.3762%" y="366.50"></text></g><g><title>_generate_cache_key (sqlalchemy/sql/cache_key.py:367) (238 samples, 1.18%)</title><rect x="52.2727%" y="324" width="1.1810%" height="15" fill="rgb(227,165,31)" fg:x="10534" fg:w="238"/><text x="52.5227%" y="334.50"></text></g><g><title>oneshot (sqlalchemy/util/langhelpers.py:1269) (257 samples, 1.28%)</title><rect x="52.2132%" y="292" width="1.2753%" height="15" fill="rgb(228,167,24)" fg:x="10522" fg:w="257"/><text x="52.4632%" y="302.50"></text></g><g><title>_generate_cache_key (sqlalchemy/sql/cache_key.py:398) (249 samples, 1.24%)</title><rect x="52.2529%" y="308" width="1.2356%" height="15" fill="rgb(228,143,12)" fg:x="10530" fg:w="249"/><text x="52.5029%" y="318.50"></text></g><g><title>_compile_w_cache (sqlalchemy/sql/elements.py:683) (282 samples, 1.40%)</title><rect x="52.1933%" y="276" width="1.3994%" height="15" fill="rgb(249,149,8)" fg:x="10518" fg:w="282"/><text x="52.4433%" y="286.50"></text></g><g><title>_compile_w_cache (sqlalchemy/sql/elements.py:699) (24 samples, 0.12%)</title><rect x="53.6076%" y="276" width="0.1191%" height="15" fill="rgb(243,35,44)" fg:x="10803" fg:w="24"/><text x="53.8576%" y="286.50"></text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1627) (324 samples, 1.61%)</title><rect x="52.1487%" y="260" width="1.6078%" height="15" fill="rgb(246,89,9)" fg:x="10509" fg:w="324"/><text x="52.3987%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/default.py:1377) (35 samples, 0.17%)</title><rect x="53.9401%" y="308" width="0.1737%" height="15" fill="rgb(233,213,13)" fg:x="10870" fg:w="35"/><text x="54.1901%" y="318.50"></text></g><g><title>_init_compiled (sqlalchemy/engine/default.py:1376) (40 samples, 0.20%)</title><rect x="53.9252%" y="292" width="0.1985%" height="15" fill="rgb(233,141,41)" fg:x="10867" fg:w="40"/><text x="54.1752%" y="302.50"></text></g><g><title>_init_compiled (sqlalchemy/engine/default.py:1398) (41 samples, 0.20%)</title><rect x="54.1385%" y="292" width="0.2035%" height="15" fill="rgb(239,167,4)" fg:x="10910" fg:w="41"/><text x="54.3885%" y="302.50"></text></g><g><title>create_cursor (sqlalchemy/engine/default.py:1722) (37 samples, 0.18%)</title><rect x="54.1584%" y="308" width="0.1836%" height="15" fill="rgb(209,217,16)" fg:x="10914" fg:w="37"/><text x="54.4084%" y="318.50"></text></g><g><title>create_default_cursor (sqlalchemy/engine/default.py:1728) (35 samples, 0.17%)</title><rect x="54.1683%" y="324" width="0.1737%" height="15" fill="rgb(219,88,35)" fg:x="10916" fg:w="35"/><text x="54.4183%" y="334.50"></text></g><g><title>cursor (sqlalchemy/pool/base.py:1489) (28 samples, 0.14%)</title><rect x="54.2031%" y="340" width="0.1389%" height="15" fill="rgb(220,193,23)" fg:x="10923" fg:w="28"/><text x="54.4531%" y="350.50"></text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1810) (135 samples, 0.67%)</title><rect x="53.7713%" y="276" width="0.6699%" height="15" fill="rgb(230,90,52)" fg:x="10836" fg:w="135"/><text x="54.0213%" y="286.50"></text></g><g><title>_exec_single_context (sqlalchemy/engine/base.py:1969) (1,823 samples, 9.05%)</title><rect x="54.5901%" y="292" width="9.0462%" height="15" fill="rgb(252,106,19)" fg:x="11001" fg:w="1823"/><text x="54.8401%" y="302.50">_exec_single_..</text></g><g><title>do_execute (sqlalchemy/engine/default.py:921) (1,819 samples, 9.03%)</title><rect x="54.6100%" y="308" width="9.0264%" height="15" fill="rgb(206,74,20)" fg:x="11005" fg:w="1819"/><text x="54.8600%" y="318.50">do_execute (s..</text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1844) (1,847 samples, 9.17%)</title><rect x="54.4760%" y="276" width="9.1653%" height="15" fill="rgb(230,138,44)" fg:x="10978" fg:w="1847"/><text x="54.7260%" y="286.50">_execute_cont..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1635) (1,994 samples, 9.89%)</title><rect x="53.7565%" y="260" width="9.8948%" height="15" fill="rgb(235,182,43)" fg:x="10833" fg:w="1994"/><text x="54.0065%" y="270.50">_execute_claus..</text></g><g><title>orm_execute_statement (sqlalchemy/orm/context.py:293) (2,353 samples, 11.68%)</title><rect x="51.9948%" y="212" width="11.6763%" height="15" fill="rgb(242,16,51)" fg:x="10478" fg:w="2353"/><text x="52.2448%" y="222.50">orm_execute_state..</text></g><g><title>execute (sqlalchemy/engine/base.py:1412) (2,345 samples, 11.64%)</title><rect x="52.0345%" y="228" width="11.6366%" height="15" fill="rgb(248,9,4)" fg:x="10486" fg:w="2345"/><text x="52.2845%" y="238.50">execute (sqlalche..</text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:515) (2,345 samples, 11.64%)</title><rect x="52.0345%" y="244" width="11.6366%" height="15" fill="rgb(210,31,22)" fg:x="10486" fg:w="2345"/><text x="52.2845%" y="254.50">_execute_on_conne..</text></g><g><title>_execute_internal (sqlalchemy/orm/session.py:2144) (2,369 samples, 11.76%)</title><rect x="51.9948%" y="196" width="11.7557%" height="15" fill="rgb(239,54,39)" fg:x="10478" fg:w="2369"/><text x="52.2448%" y="206.50">_execute_internal..</text></g><g><title>_iter (sqlalchemy/orm/query.py:2842) (6,179 samples, 30.66%)</title><rect x="33.1034%" y="164" width="30.6620%" height="15" fill="rgb(230,99,41)" fg:x="6671" fg:w="6179"/><text x="33.3534%" y="174.50">_iter (sqlalchemy/orm/query.py:2842)</text></g><g><title>execute (sqlalchemy/orm/session.py:2262) (6,177 samples, 30.65%)</title><rect x="33.1133%" y="180" width="30.6520%" height="15" fill="rgb(253,106,12)" fg:x="6673" fg:w="6177"/><text x="33.3633%" y="190.50">execute (sqlalchemy/orm/session.py:2262)</text></g><g><title>fetchall (sqlalchemy/engine/cursor.py:1135) (21 samples, 0.10%)</title><rect x="64.1177%" y="276" width="0.1042%" height="15" fill="rgb(213,46,41)" fg:x="12921" fg:w="21"/><text x="64.3677%" y="286.50"></text></g><g><title>_raw_all_rows (sqlalchemy/engine/result.py:546) (24 samples, 0.12%)</title><rect x="64.1177%" y="244" width="0.1191%" height="15" fill="rgb(215,133,35)" fg:x="12921" fg:w="24"/><text x="64.3677%" y="254.50"></text></g><g><title>_fetchall_impl (sqlalchemy/engine/cursor.py:2102) (24 samples, 0.12%)</title><rect x="64.1177%" y="260" width="0.1191%" height="15" fill="rgb(213,28,5)" fg:x="12921" fg:w="24"/><text x="64.3677%" y="270.50"></text></g><g><title>chunks (sqlalchemy/orm/loading.py:191) (86 samples, 0.43%)</title><rect x="64.1177%" y="228" width="0.4268%" height="15" fill="rgb(215,77,49)" fg:x="12921" fg:w="86"/><text x="64.3677%" y="238.50"></text></g><g><title>_raw_all_rows (sqlalchemy/engine/result.py:547) (62 samples, 0.31%)</title><rect x="64.2368%" y="244" width="0.3077%" height="15" fill="rgb(248,100,22)" fg:x="12945" fg:w="62"/><text x="64.4868%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/result.py:547) (61 samples, 0.30%)</title><rect x="64.2418%" y="260" width="0.3027%" height="15" fill="rgb(208,67,9)" fg:x="12946" fg:w="61"/><text x="64.4918%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1035) (36 samples, 0.18%)</title><rect x="65.2094%" y="260" width="0.1786%" height="15" fill="rgb(219,133,21)" fg:x="13141" fg:w="36"/><text x="65.4594%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1037) (60 samples, 0.30%)</title><rect x="65.4129%" y="260" width="0.2977%" height="15" fill="rgb(246,46,29)" fg:x="13182" fg:w="60"/><text x="65.6629%" y="270.50"></text></g><g><title>get (sqlalchemy/orm/identity.py:222) (82 samples, 0.41%)</title><rect x="66.1473%" y="276" width="0.4069%" height="15" fill="rgb(246,185,52)" fg:x="13330" fg:w="82"/><text x="66.3973%" y="286.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1041) (166 samples, 0.82%)</title><rect x="65.7404%" y="260" width="0.8237%" height="15" fill="rgb(252,136,11)" fg:x="13248" fg:w="166"/><text x="65.9904%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1062) (508 samples, 2.52%)</title><rect x="66.6385%" y="260" width="2.5208%" height="15" fill="rgb(219,138,53)" fg:x="13429" fg:w="508"/><text x="66.8885%" y="270.50">_i..</text></g><g><title>new_instance (sqlalchemy/orm/instrumentation.py:509) (129 samples, 0.64%)</title><rect x="69.7251%" y="276" width="0.6401%" height="15" fill="rgb(211,51,23)" fg:x="14051" fg:w="129"/><text x="69.9751%" y="286.50"></text></g><g><title>__init__ (sqlalchemy/orm/state.py:196) (69 samples, 0.34%)</title><rect x="71.1245%" y="292" width="0.3424%" height="15" fill="rgb(247,221,28)" fg:x="14333" fg:w="69"/><text x="71.3745%" y="302.50"></text></g><g><title>__init__ (sqlalchemy/orm/state.py:198) (729 samples, 3.62%)</title><rect x="71.5512%" y="292" width="3.6175%" height="15" fill="rgb(251,222,45)" fg:x="14419" fg:w="729"/><text x="71.8012%" y="302.50">__in..</text></g><g><title>__init__ (sqlalchemy/orm/state.py:199) (397 samples, 1.97%)</title><rect x="75.1687%" y="292" width="1.9700%" height="15" fill="rgb(217,162,53)" fg:x="15148" fg:w="397"/><text x="75.4187%" y="302.50">_..</text></g><g><title>new_instance (sqlalchemy/orm/instrumentation.py:511) (1,739 samples, 8.63%)</title><rect x="70.4099%" y="276" width="8.6294%" height="15" fill="rgb(229,93,14)" fg:x="14189" fg:w="1739"/><text x="70.6599%" y="286.50">new_instance..</text></g><g><title>__init__ (sqlalchemy/orm/state.py:200) (383 samples, 1.90%)</title><rect x="77.1387%" y="292" width="1.9006%" height="15" fill="rgb(209,67,49)" fg:x="15545" fg:w="383"/><text x="77.3887%" y="302.50">_..</text></g><g><title>new_instance (sqlalchemy/orm/instrumentation.py:512) (470 samples, 2.33%)</title><rect x="79.0393%" y="276" width="2.3323%" height="15" fill="rgb(213,87,29)" fg:x="15928" fg:w="470"/><text x="79.2893%" y="286.50">n..</text></g><g><title>set (&lt;string&gt;:1) (374 samples, 1.86%)</title><rect x="79.5157%" y="292" width="1.8559%" height="15" fill="rgb(205,151,52)" fg:x="16024" fg:w="374"/><text x="79.7657%" y="302.50">s..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:1069) (2,449 samples, 12.15%)</title><rect x="69.2338%" y="260" width="12.1526%" height="15" fill="rgb(253,215,39)" fg:x="13952" fg:w="2449"/><text x="69.4838%" y="270.50">_instance (sqlalch..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:1071) (72 samples, 0.36%)</title><rect x="81.3865%" y="260" width="0.3573%" height="15" fill="rgb(221,220,41)" fg:x="16401" fg:w="72"/><text x="81.6365%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1072) (43 samples, 0.21%)</title><rect x="81.7437%" y="260" width="0.2134%" height="15" fill="rgb(218,133,21)" fg:x="16473" fg:w="43"/><text x="81.9937%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1074) (320 samples, 1.59%)</title><rect x="81.9968%" y="260" width="1.5879%" height="15" fill="rgb(221,193,43)" fg:x="16524" fg:w="320"/><text x="82.2468%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1077) (48 samples, 0.24%)</title><rect x="83.5848%" y="260" width="0.2382%" height="15" fill="rgb(240,128,52)" fg:x="16844" fg:w="48"/><text x="83.8348%" y="270.50"></text></g><g><title>_add_unpresent (sqlalchemy/orm/identity.py:211) (70 samples, 0.35%)</title><rect x="84.2795%" y="276" width="0.3474%" height="15" fill="rgb(253,114,12)" fg:x="16984" fg:w="70"/><text x="84.5295%" y="286.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1078) (211 samples, 1.05%)</title><rect x="83.8229%" y="260" width="1.0470%" height="15" fill="rgb(215,223,47)" fg:x="16892" fg:w="211"/><text x="84.0729%" y="270.50"></text></g><g><title>_add_unpresent (sqlalchemy/orm/identity.py:212) (49 samples, 0.24%)</title><rect x="84.6268%" y="276" width="0.2432%" height="15" fill="rgb(248,225,23)" fg:x="17054" fg:w="49"/><text x="84.8768%" y="286.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1098) (35 samples, 0.17%)</title><rect x="85.0437%" y="260" width="0.1737%" height="15" fill="rgb(250,108,0)" fg:x="17138" fg:w="35"/><text x="85.2937%" y="270.50"></text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:1284) (32 samples, 0.16%)</title><rect x="85.9121%" y="276" width="0.1588%" height="15" fill="rgb(228,208,7)" fg:x="17313" fg:w="32"/><text x="86.1621%" y="286.50"></text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:1286) (492 samples, 2.44%)</title><rect x="86.0709%" y="276" width="2.4414%" height="15" fill="rgb(244,45,10)" fg:x="17345" fg:w="492"/><text x="86.3209%" y="286.50">_p..</text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:1287) (184 samples, 0.91%)</title><rect x="88.5123%" y="276" width="0.9131%" height="15" fill="rgb(207,125,25)" fg:x="17837" fg:w="184"/><text x="88.7623%" y="286.50"></text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:1294) (27 samples, 0.13%)</title><rect x="89.4403%" y="276" width="0.1340%" height="15" fill="rgb(210,195,18)" fg:x="18024" fg:w="27"/><text x="89.6903%" y="286.50"></text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:1298) (34 samples, 0.17%)</title><rect x="89.5742%" y="276" width="0.1687%" height="15" fill="rgb(249,80,12)" fg:x="18051" fg:w="34"/><text x="89.8242%" y="286.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1100) (922 samples, 4.58%)</title><rect x="85.2173%" y="260" width="4.5752%" height="15" fill="rgb(221,65,9)" fg:x="17173" fg:w="922"/><text x="85.4673%" y="270.50">_inst..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:1118) (34 samples, 0.17%)</title><rect x="89.9414%" y="260" width="0.1687%" height="15" fill="rgb(235,49,36)" fg:x="18125" fg:w="34"/><text x="90.1914%" y="270.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:1137) (27 samples, 0.13%)</title><rect x="90.2293%" y="260" width="0.1340%" height="15" fill="rgb(225,32,20)" fg:x="18183" fg:w="27"/><text x="90.4793%" y="270.50"></text></g><g><title>_fetchall_impl (sqlalchemy/engine/result.py:2293) (5,363 samples, 26.61%)</title><rect x="63.8100%" y="212" width="26.6127%" height="15" fill="rgb(215,141,46)" fg:x="12859" fg:w="5363"/><text x="64.0600%" y="222.50">_fetchall_impl (sqlalchemy/engine/result.py..</text></g><g><title>chunks (sqlalchemy/orm/loading.py:195) (5,215 samples, 25.88%)</title><rect x="64.5445%" y="228" width="25.8783%" height="15" fill="rgb(250,160,47)" fg:x="13007" fg:w="5215"/><text x="64.7945%" y="238.50">chunks (sqlalchemy/orm/loading.py:195)</text></g><g><title>&lt;listcomp&gt; (sqlalchemy/orm/loading.py:195) (5,215 samples, 25.88%)</title><rect x="64.5445%" y="244" width="25.8783%" height="15" fill="rgb(216,222,40)" fg:x="13007" fg:w="5215"/><text x="64.7945%" y="254.50">&lt;listcomp&gt; (sqlalchemy/orm/loading.py:195)</text></g><g><title>_soft_close (sqlalchemy/engine/result.py:2356) (45 samples, 0.22%)</title><rect x="90.4426%" y="228" width="0.2233%" height="15" fill="rgb(234,217,39)" fg:x="18226" fg:w="45"/><text x="90.6926%" y="238.50"></text></g><g><title>_allrows (sqlalchemy/engine/result.py:554) (5,427 samples, 26.93%)</title><rect x="63.8051%" y="180" width="26.9303%" height="15" fill="rgb(207,178,40)" fg:x="12858" fg:w="5427"/><text x="64.0551%" y="190.50">_allrows (sqlalchemy/engine/result.py:554)</text></g><g><title>_fetchall_impl (sqlalchemy/engine/result.py:1693) (5,427 samples, 26.93%)</title><rect x="63.8051%" y="196" width="26.9303%" height="15" fill="rgb(221,136,13)" fg:x="12858" fg:w="5427"/><text x="64.0551%" y="206.50">_fetchall_impl (sqlalchemy/engine/result.py..</text></g><g><title>_fetchall_impl (sqlalchemy/engine/result.py:2295) (63 samples, 0.31%)</title><rect x="90.4228%" y="212" width="0.3126%" height="15" fill="rgb(249,199,10)" fg:x="18222" fg:w="63"/><text x="90.6728%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/result.py:566) (48 samples, 0.24%)</title><rect x="90.8595%" y="196" width="0.2382%" height="15" fill="rgb(249,222,13)" fg:x="18310" fg:w="48"/><text x="91.1095%" y="206.50"></text></g><g><title>_allrows (sqlalchemy/engine/result.py:566) (144 samples, 0.71%)</title><rect x="90.8396%" y="180" width="0.7146%" height="15" fill="rgb(244,185,38)" fg:x="18306" fg:w="144"/><text x="91.0896%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/result.py:575) (83 samples, 0.41%)</title><rect x="91.1423%" y="196" width="0.4119%" height="15" fill="rgb(236,202,9)" fg:x="18367" fg:w="83"/><text x="91.3923%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/result.py:569) (26 samples, 0.13%)</title><rect x="91.6733%" y="196" width="0.1290%" height="15" fill="rgb(250,229,37)" fg:x="18474" fg:w="26"/><text x="91.9233%" y="206.50"></text></g><g><title>all (sqlalchemy/orm/query.py:2688) (11,932 samples, 59.21%)</title><rect x="32.7461%" y="148" width="59.2100%" height="15" fill="rgb(206,174,23)" fg:x="6599" fg:w="11932"/><text x="32.9961%" y="158.50">all (sqlalchemy/orm/query.py:2688)</text></g><g><title>all (sqlalchemy/engine/result.py:1786) (5,678 samples, 28.18%)</title><rect x="63.7803%" y="164" width="28.1759%" height="15" fill="rgb(211,33,43)" fg:x="12853" fg:w="5678"/><text x="64.0303%" y="174.50">all (sqlalchemy/engine/result.py:1786)</text></g><g><title>_allrows (sqlalchemy/engine/result.py:568) (81 samples, 0.40%)</title><rect x="91.5542%" y="180" width="0.4019%" height="15" fill="rgb(245,58,50)" fg:x="18450" fg:w="81"/><text x="91.8042%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sqlalchemy/engine/result.py:571) (30 samples, 0.15%)</title><rect x="91.8073%" y="196" width="0.1489%" height="15" fill="rgb(244,68,36)" fg:x="18501" fg:w="30"/><text x="92.0573%" y="206.50"></text></g><g><title>__init__ (sqlalchemy/sql/elements.py:2076) (21 samples, 0.10%)</title><rect x="92.0058%" y="276" width="0.1042%" height="15" fill="rgb(232,229,15)" fg:x="18541" fg:w="21"/><text x="92.2558%" y="286.50"></text></g><g><title>_offset_or_limit_clause (sqlalchemy/sql/util.py:1428) (36 samples, 0.18%)</title><rect x="91.9809%" y="228" width="0.1786%" height="15" fill="rgb(254,30,23)" fg:x="18536" fg:w="36"/><text x="92.2309%" y="238.50"></text></g><g><title>expect (sqlalchemy/sql/coercions.py:413) (35 samples, 0.17%)</title><rect x="91.9859%" y="244" width="0.1737%" height="15" fill="rgb(235,160,14)" fg:x="18537" fg:w="35"/><text x="92.2359%" y="254.50"></text></g><g><title>_literal_coercion (sqlalchemy/sql/coercions.py:1094) (33 samples, 0.16%)</title><rect x="91.9958%" y="260" width="0.1638%" height="15" fill="rgb(212,155,44)" fg:x="18539" fg:w="33"/><text x="92.2458%" y="270.50"></text></g><g><title>limit (&lt;string&gt;:2) (42 samples, 0.21%)</title><rect x="91.9561%" y="148" width="0.2084%" height="15" fill="rgb(226,2,50)" fg:x="18531" fg:w="42"/><text x="92.2061%" y="158.50"></text></g><g><title>_generative (sqlalchemy/sql/base.py:283) (41 samples, 0.20%)</title><rect x="91.9611%" y="164" width="0.2035%" height="15" fill="rgb(234,177,6)" fg:x="18532" fg:w="41"/><text x="92.2111%" y="174.50"></text></g><g><title>limit (&lt;string&gt;:2) (40 samples, 0.20%)</title><rect x="91.9661%" y="180" width="0.1985%" height="15" fill="rgb(217,24,9)" fg:x="18533" fg:w="40"/><text x="92.2161%" y="190.50"></text></g><g><title>generate (sqlalchemy/orm/base.py:302) (38 samples, 0.19%)</title><rect x="91.9760%" y="196" width="0.1886%" height="15" fill="rgb(220,13,46)" fg:x="18535" fg:w="38"/><text x="92.2260%" y="206.50"></text></g><g><title>limit (sqlalchemy/orm/query.py:2606) (38 samples, 0.19%)</title><rect x="91.9760%" y="212" width="0.1886%" height="15" fill="rgb(239,221,27)" fg:x="18535" fg:w="38"/><text x="92.2260%" y="222.50"></text></g><g><title>order_by (sqlalchemy/orm/query.py:2047) (24 samples, 0.12%)</title><rect x="92.1794%" y="180" width="0.1191%" height="15" fill="rgb(222,198,25)" fg:x="18576" fg:w="24"/><text x="92.4294%" y="190.50"></text></g><g><title>order_by (&lt;string&gt;:2) (28 samples, 0.14%)</title><rect x="92.1645%" y="148" width="0.1389%" height="15" fill="rgb(211,99,13)" fg:x="18573" fg:w="28"/><text x="92.4145%" y="158.50"></text></g><g><title>_generative (sqlalchemy/sql/base.py:283) (27 samples, 0.13%)</title><rect x="92.1695%" y="164" width="0.1340%" height="15" fill="rgb(232,111,31)" fg:x="18574" fg:w="27"/><text x="92.4195%" y="174.50"></text></g><g><title>read_users (app/main.py:23) (12,036 samples, 59.73%)</title><rect x="32.6767%" y="116" width="59.7261%" height="15" fill="rgb(245,82,37)" fg:x="6585" fg:w="12036"/><text x="32.9267%" y="126.50">read_users (app/main.py:23)</text></g><g><title>get_users (app/crud.py:6) (12,035 samples, 59.72%)</title><rect x="32.6816%" y="132" width="59.7211%" height="15" fill="rgb(227,149,46)" fg:x="6586" fg:w="12035"/><text x="32.9316%" y="142.50">get_users (app/crud.py:6)</text></g><g><title>__get__ (sqlalchemy/orm/attributes.py:554) (26 samples, 0.13%)</title><rect x="96.8539%" y="148" width="0.1290%" height="15" fill="rgb(218,36,50)" fg:x="19518" fg:w="26"/><text x="97.1039%" y="158.50"></text></g><g><title>__get__ (sqlalchemy/orm/attributes.py:557) (104 samples, 0.52%)</title><rect x="96.9829%" y="148" width="0.5161%" height="15" fill="rgb(226,80,48)" fg:x="19544" fg:w="104"/><text x="97.2329%" y="158.50"></text></g><g><title>__get__ (sqlalchemy/orm/attributes.py:558) (237 samples, 1.18%)</title><rect x="97.4990%" y="148" width="1.1761%" height="15" fill="rgb(238,224,15)" fg:x="19648" fg:w="237"/><text x="97.7490%" y="158.50"></text></g><g><title>__get__ (sqlalchemy/orm/attributes.py:559) (129 samples, 0.64%)</title><rect x="98.6751%" y="148" width="0.6401%" height="15" fill="rgb(241,136,10)" fg:x="19885" fg:w="129"/><text x="98.9251%" y="158.50"></text></g><g><title>__instancecheck__ (abc.py:119) (55 samples, 0.27%)</title><rect x="99.3152%" y="148" width="0.2729%" height="15" fill="rgb(208,32,45)" fg:x="20014" fg:w="55"/><text x="99.5652%" y="158.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:807) (14,535 samples, 72.13%)</title><rect x="27.7044%" y="100" width="72.1268%" height="15" fill="rgb(207,135,9)" fg:x="5583" fg:w="14535"/><text x="27.9544%" y="110.50">run (anyio/_backends/_asyncio.py:807)</text></g><g><title>validate (fastapi/_compat.py:119) (1,496 samples, 7.42%)</title><rect x="92.4077%" y="116" width="7.4236%" height="15" fill="rgb(206,86,44)" fg:x="18622" fg:w="1496"/><text x="92.6577%" y="126.50">validate (..</text></g><g><title>validate_python (pydantic/type_adapter.py:208) (1,495 samples, 7.42%)</title><rect x="92.4127%" y="132" width="7.4186%" height="15" fill="rgb(245,177,15)" fg:x="18623" fg:w="1495"/><text x="92.6627%" y="142.50">validate_p..</text></g><g><title>__instancecheck__ (pydantic/_internal/_model_construction.py:221) (49 samples, 0.24%)</title><rect x="99.5881%" y="148" width="0.2432%" height="15" fill="rgb(206,64,50)" fg:x="20069" fg:w="49"/><text x="99.8381%" y="158.50"></text></g><g><title>all (20,152 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="20152"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:973) (14,767 samples, 73.28%)</title><rect x="26.7219%" y="68" width="73.2781%" height="15" fill="rgb(213,64,8)" fg:x="5385" fg:w="14767"/><text x="26.9719%" y="78.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (14,767 samples, 73.28%)</title><rect x="26.7219%" y="84" width="73.2781%" height="15" fill="rgb(210,75,36)" fg:x="5385" fg:w="14767"/><text x="26.9719%" y="94.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (anyio/_backends/_asyncio.py:816) (23 samples, 0.11%)</title><rect x="99.8859%" y="100" width="0.1141%" height="15" fill="rgb(229,88,21)" fg:x="20129" fg:w="23"/><text x="100.1359%" y="110.50"></text></g></svg></svg>